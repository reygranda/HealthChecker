import { Aggregated, Breakdowns, Datapoints, Interval, Metrics, Period, Properties } from "./types.js";
export default class Plausible {
    private url;
    private key;
    private site;
    constructor(key: string, site: string, url?: string | null);
    private getAbstract;
    /**
     * This function returns the number of current visitors on your site. A current visitor is defined as a visitor who triggered a pageview on your site in the last 5 minutes.
     */
    getRealtime(): Promise<number>;
    /**
     * This function aggregates metrics over a certain time period. If you are familiar with the Plausible dashboard, this function corresponds to the top row of stats that include Unique Visitors, Pageviews, Bounce rate and Visit duration. You can retrieve any number and combination of these metrics in one request.
     */
    getAggregate<Compare extends boolean>(period: Period, metric: Metrics, compare?: Compare | null, filters?: string | null): Promise<Aggregated<Compare>>;
    /**
     * This function provides timeseries data over a certain time period. If you are familiar with the Plausible dashboard, this function corresponds to the main visitor graph.
     */
    getTimeseries<Metric extends Metrics>(period: Period, metric: Metric, filters?: string | null, interval?: Interval | null): Promise<Datapoints<Metric>>;
    /**
     * This function allows you to breakdown your stats by some property. If you are familiar with SQL family databases, this function corresponds to running GROUP BY on a certain property in your stats.
     *
     * Check out the [properties](https://plausible.io/docs/stats-api#properties) section for a reference of all the properties you can use in this query.
     */
    getBreakdown<Property extends Properties, Metric extends Metrics>(period: Period, metric: Metric, property: Property, filter?: string | null, limit?: number | null, page?: number | null): Promise<Breakdowns<Property, Metric>>;
}
